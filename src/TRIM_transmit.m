function [Ion_state,Ion,Atom,Energy,Depth,X,Z,CosX,CosY,CosZ] = TRIM_transmit(filename, startRow, endRow)
%TRIM_transmit Import data from SRIM's TRANSMIT.TXT File.
%   [ION_STATE,ION,ATOM,ENERGY,DEPTH,X,Z,COSX,COSY,COSZ] =
%   TRIM_transmit(FILENAME) Reads data from text file FILENAME for the default
%   selection.
%
%   [ION_STATE,ION,ATOM,ENERGY,DEPTH,X,Z,COSX,COSY,COSZ] =
%   IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [Ion_state,Ion,Atom,Energy,Depth,X,Z,CosX,CosY,CosZ] =
%   importfile('TRANSMIT_1835.txt',13, 5467);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2015/07/09 16:24:52
% Notes added by Pieter Oliver 2015.July

%% Initialize variables.
if nargin<=2
    startRow = 13;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: text (%s)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%1s%5f%3f%13f%14f%11f%11f%11f%10f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', '', 'WhiteSpace', '', 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', '', 'WhiteSpace', '', 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
Ion_state = dataArray{:, 1};
Ion = dataArray{:, 2};
Atom = dataArray{:, 3};
Energy = dataArray{:, 4};
Depth = dataArray{:, 5};
X = dataArray{:, 6};
Z = dataArray{:, 7};
CosX = dataArray{:, 8};
CosY = dataArray{:, 9};
CosZ = dataArray{:, 10};

